["^ ","~:resource-id",["~:shadow.build.classpath/resource","goog/net/jsloader.js"],"~:js","goog.provide(\"goog.net.jsloader\");\ngoog.provide(\"goog.net.jsloader.Error\");\ngoog.provide(\"goog.net.jsloader.ErrorCode\");\ngoog.provide(\"goog.net.jsloader.Options\");\ngoog.require(\"goog.array\");\ngoog.require(\"goog.async.Deferred\");\ngoog.require(\"goog.debug.Error\");\ngoog.require(\"goog.dom\");\ngoog.require(\"goog.dom.TagName\");\ngoog.require(\"goog.dom.safe\");\ngoog.require(\"goog.html.TrustedResourceUrl\");\ngoog.require(\"goog.object\");\n/** @private @type {string} */ goog.net.jsloader.GLOBAL_VERIFY_OBJS_ = \"closure_verification\";\n/** @type {number} */ goog.net.jsloader.DEFAULT_TIMEOUT = 5000;\n/** @typedef {{timeout:(number|undefined),document:(HTMLDocument|undefined),cleanupWhenDone:(boolean|undefined),attributes:(!Object<string,string>|undefined)}} */ goog.net.jsloader.Options;\n/** @private @type {!Array<!goog.html.TrustedResourceUrl>} */ goog.net.jsloader.scriptsToLoad_ = [];\n/** @private @type {!goog.async.Deferred<null>} */ goog.net.jsloader.scriptLoadingDeferred_;\n/**\n @param {Array<!goog.html.TrustedResourceUrl>} trustedUris\n @param {goog.net.jsloader.Options=} opt_options\n @return {!goog.async.Deferred}\n */\ngoog.net.jsloader.safeLoadMany = function(trustedUris, opt_options) {\n  if (!trustedUris.length) {\n    return goog.async.Deferred.succeed(null);\n  }\n  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;\n  goog.array.extend(goog.net.jsloader.scriptsToLoad_, trustedUris);\n  if (isAnotherModuleLoading) {\n    return goog.net.jsloader.scriptLoadingDeferred_;\n  }\n  trustedUris = goog.net.jsloader.scriptsToLoad_;\n  var popAndLoadNextScript = function() {\n    var trustedUri = trustedUris.shift();\n    var deferred = goog.net.jsloader.safeLoad(trustedUri, opt_options);\n    if (trustedUris.length) {\n      deferred.addBoth(popAndLoadNextScript);\n    }\n    return deferred;\n  };\n  goog.net.jsloader.scriptLoadingDeferred_ = popAndLoadNextScript();\n  return goog.net.jsloader.scriptLoadingDeferred_;\n};\n/**\n @param {!goog.html.TrustedResourceUrl} trustedUri\n @param {goog.net.jsloader.Options=} opt_options\n @return {!goog.async.Deferred}\n */\ngoog.net.jsloader.safeLoad = function(trustedUri, opt_options) {\n  var options = opt_options || {};\n  var doc = options.document || document;\n  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);\n  var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);\n  var request = {script_:script, timeout_:undefined};\n  var deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request);\n  var timeout = null;\n  var timeoutDuration = goog.isDefAndNotNull(options.timeout) ? options.timeout : goog.net.jsloader.DEFAULT_TIMEOUT;\n  if (timeoutDuration > 0) {\n    timeout = window.setTimeout(function() {\n      goog.net.jsloader.cleanup_(script, true);\n      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.TIMEOUT, \"Timeout reached for loading script \" + uri));\n    }, timeoutDuration);\n    request.timeout_ = timeout;\n  }\n  script.onload = script.onreadystatechange = function() {\n    if (!script.readyState || script.readyState == \"loaded\" || script.readyState == \"complete\") {\n      var removeScriptNode = options.cleanupWhenDone || false;\n      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);\n      deferred.callback(null);\n    }\n  };\n  script.onerror = function() {\n    goog.net.jsloader.cleanup_(script, true, timeout);\n    deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.LOAD_ERROR, \"Error while loading script \" + uri));\n  };\n  var properties = options.attributes || {};\n  goog.object.extend(properties, {\"type\":\"text/javascript\", \"charset\":\"UTF-8\"});\n  goog.dom.setProperties(script, properties);\n  goog.dom.safe.setScriptSrc(script, trustedUri);\n  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);\n  scriptParent.appendChild(script);\n  return deferred;\n};\n/**\n @param {!goog.html.TrustedResourceUrl} trustedUri\n @param {string} verificationObjName\n @param {goog.net.jsloader.Options} options\n @return {!goog.async.Deferred}\n */\ngoog.net.jsloader.safeLoadAndVerify = function(trustedUri, verificationObjName, options) {\n  if (!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]) {\n    goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {};\n  }\n  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];\n  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);\n  if (goog.isDef(verifyObjs[verificationObjName])) {\n    return goog.async.Deferred.fail(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS, \"Verification object \" + verificationObjName + \" already defined.\"));\n  }\n  var sendDeferred = goog.net.jsloader.safeLoad(trustedUri, options);\n  var deferred = new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));\n  sendDeferred.addCallback(function() {\n    var result = verifyObjs[verificationObjName];\n    if (goog.isDef(result)) {\n      deferred.callback(result);\n      delete verifyObjs[verificationObjName];\n    } else {\n      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_ERROR, \"Script \" + uri + \" loaded, but verification object \" + verificationObjName + \" was not defined.\"));\n    }\n  });\n  sendDeferred.addErrback(function(error) {\n    if (goog.isDef(verifyObjs[verificationObjName])) {\n      delete verifyObjs[verificationObjName];\n    }\n    deferred.errback(error);\n  });\n  return deferred;\n};\n/**\n @private\n @param {!HTMLDocument} doc\n @return {!Element}\n */\ngoog.net.jsloader.getScriptParentElement_ = function(doc) {\n  var headElements = goog.dom.getElementsByTagName(goog.dom.TagName.HEAD, doc);\n  if (!headElements || goog.array.isEmpty(headElements)) {\n    return doc.documentElement;\n  } else {\n    return headElements[0];\n  }\n};\n/**\n @private\n @this {{script_:Element,timeout_:number}}\n */\ngoog.net.jsloader.cancel_ = function() {\n  var request = this;\n  if (request && request.script_) {\n    var scriptNode = request.script_;\n    if (scriptNode && scriptNode.tagName == goog.dom.TagName.SCRIPT) {\n      goog.net.jsloader.cleanup_(scriptNode, true, request.timeout_);\n    }\n  }\n};\n/**\n @private\n @param {Node} scriptNode\n @param {boolean} removeScriptNode\n @param {?number=} opt_timeout\n @suppress {strictMissingProperties}\n */\ngoog.net.jsloader.cleanup_ = function(scriptNode, removeScriptNode, opt_timeout) {\n  if (goog.isDefAndNotNull(opt_timeout)) {\n    goog.global.clearTimeout(opt_timeout);\n  }\n  scriptNode.onload = goog.nullFunction;\n  scriptNode.onerror = goog.nullFunction;\n  scriptNode.onreadystatechange = goog.nullFunction;\n  if (removeScriptNode) {\n    window.setTimeout(function() {\n      goog.dom.removeNode(scriptNode);\n    }, 0);\n  }\n};\n/** @enum {number} */ goog.net.jsloader.ErrorCode = {LOAD_ERROR:0, TIMEOUT:1, VERIFY_ERROR:2, VERIFY_OBJECT_ALREADY_EXISTS:3};\n/**\n @final\n @constructor\n @extends {goog.debug.Error}\n @param {goog.net.jsloader.ErrorCode} code\n @param {string=} opt_message\n */\ngoog.net.jsloader.Error = function(code, opt_message) {\n  var msg = \"Jsloader error (code #\" + code + \")\";\n  if (opt_message) {\n    msg += \": \" + opt_message;\n  }\n  goog.net.jsloader.Error.base(this, \"constructor\", msg);\n  /** @type {goog.net.jsloader.ErrorCode} */ this.code = code;\n};\ngoog.inherits(goog.net.jsloader.Error, goog.debug.Error);\n","~:source","// Copyright 2011 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A utility to load JavaScript files via DOM script tags.\n * Refactored from goog.net.Jsonp. Works cross-domain.\n *\n */\n\ngoog.provide('goog.net.jsloader');\ngoog.provide('goog.net.jsloader.Error');\ngoog.provide('goog.net.jsloader.ErrorCode');\ngoog.provide('goog.net.jsloader.Options');\n\ngoog.require('goog.array');\ngoog.require('goog.async.Deferred');\ngoog.require('goog.debug.Error');\ngoog.require('goog.dom');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.safe');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.object');\n\n\n/**\n * The name of the property of goog.global under which the JavaScript\n * verification object is stored by the loaded script.\n * @private {string}\n */\ngoog.net.jsloader.GLOBAL_VERIFY_OBJS_ = 'closure_verification';\n\n\n/**\n * The default length of time, in milliseconds, we are prepared to wait for a\n * load request to complete.\n * @type {number}\n */\ngoog.net.jsloader.DEFAULT_TIMEOUT = 5000;\n\n\n/**\n * Optional parameters for goog.net.jsloader.send.\n * timeout: The length of time, in milliseconds, we are prepared to wait\n *     for a load request to complete, or 0 or negative for no timeout. Default\n *     is 5 seconds.\n * document: The HTML document under which to load the JavaScript. Default is\n *     the current document.\n * cleanupWhenDone: If true clean up the script tag after script completes to\n *     load. This is important if you just want to read data from the JavaScript\n *     and then throw it away. Default is false.\n * attributes: Additional attributes to set on the script tag.\n *\n * @typedef {{\n *   timeout: (number|undefined),\n *   document: (HTMLDocument|undefined),\n *   cleanupWhenDone: (boolean|undefined),\n *   attributes: (!Object<string, string>|undefined)\n * }}\n */\ngoog.net.jsloader.Options;\n\n\n/**\n * Scripts (URIs) waiting to be loaded.\n * @private {!Array<!goog.html.TrustedResourceUrl>}\n */\ngoog.net.jsloader.scriptsToLoad_ = [];\n\n\n/**\n * The deferred result of loading the URIs in scriptsToLoad_.\n * We need to return this to a caller that wants to load URIs while\n * a deferred is already working on them.\n * @private {!goog.async.Deferred<null>}\n */\ngoog.net.jsloader.scriptLoadingDeferred_;\n\n\n\n/**\n * Loads and evaluates the JavaScript files at the specified URIs, guaranteeing\n * the order of script loads.\n *\n * Because we have to load the scripts in serial (load script 1, exec script 1,\n * load script 2, exec script 2, and so on), this will be slower than doing\n * the network fetches in parallel.\n *\n * If you need to load a large number of scripts but dependency order doesn't\n * matter, you should just call goog.net.jsloader.safeLoad N times.\n *\n * If you need to load a large number of scripts on the same domain,\n * you may want to use goog.module.ModuleLoader.\n *\n * @param {Array<!goog.html.TrustedResourceUrl>} trustedUris The URIs to load.\n * @param {goog.net.jsloader.Options=} opt_options Optional parameters. See\n *     goog.net.jsloader.options documentation for details.\n * @return {!goog.async.Deferred} The deferred result, that may be used to add\n *     callbacks\n */\ngoog.net.jsloader.safeLoadMany = function(trustedUris, opt_options) {\n  // Loading the scripts in serial introduces asynchronosity into the flow.\n  // Therefore, there are race conditions where client A can kick off the load\n  // sequence for client B, even though client A's scripts haven't all been\n  // loaded yet.\n  //\n  // To work around this issue, all module loads share a queue.\n  if (!trustedUris.length) {\n    return goog.async.Deferred.succeed(null);\n  }\n\n  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;\n  goog.array.extend(goog.net.jsloader.scriptsToLoad_, trustedUris);\n  if (isAnotherModuleLoading) {\n    // jsloader is still loading some other scripts.\n    // In order to prevent the race condition noted above, we just add\n    // these URIs to the end of the scripts' queue and return the deferred\n    // result of the ongoing script load, so the caller knows when they\n    // finish loading.\n    return goog.net.jsloader.scriptLoadingDeferred_;\n  }\n\n  trustedUris = goog.net.jsloader.scriptsToLoad_;\n  var popAndLoadNextScript = function() {\n    var trustedUri = trustedUris.shift();\n    var deferred = goog.net.jsloader.safeLoad(trustedUri, opt_options);\n    if (trustedUris.length) {\n      deferred.addBoth(popAndLoadNextScript);\n    }\n    return deferred;\n  };\n  goog.net.jsloader.scriptLoadingDeferred_ = popAndLoadNextScript();\n  return goog.net.jsloader.scriptLoadingDeferred_;\n};\n\n\n/**\n * Loads and evaluates a JavaScript file.\n * When the script loads, a user callback is called.\n * It is the client's responsibility to verify that the script ran successfully.\n *\n * @param {!goog.html.TrustedResourceUrl} trustedUri The URI of the JavaScript.\n * @param {goog.net.jsloader.Options=} opt_options Optional parameters. See\n *     goog.net.jsloader.Options documentation for details.\n * @return {!goog.async.Deferred} The deferred result, that may be used to add\n *     callbacks and/or cancel the transmission.\n *     The error callback will be called with a single goog.net.jsloader.Error\n *     parameter.\n */\ngoog.net.jsloader.safeLoad = function(trustedUri, opt_options) {\n  var options = opt_options || {};\n  var doc = options.document || document;\n  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);\n\n  var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);\n  var request = {script_: script, timeout_: undefined};\n  var deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request);\n\n  // Set a timeout.\n  var timeout = null;\n  var timeoutDuration = goog.isDefAndNotNull(options.timeout) ?\n      options.timeout :\n      goog.net.jsloader.DEFAULT_TIMEOUT;\n  if (timeoutDuration > 0) {\n    timeout = window.setTimeout(function() {\n      goog.net.jsloader.cleanup_(script, true);\n      deferred.errback(\n          new goog.net.jsloader.Error(\n              goog.net.jsloader.ErrorCode.TIMEOUT,\n              'Timeout reached for loading script ' + uri));\n    }, timeoutDuration);\n    request.timeout_ = timeout;\n  }\n\n  // Hang the user callback to be called when the script completes to load.\n  // NOTE(user): This callback will be called in IE even upon error. In any\n  // case it is the client's responsibility to verify that the script ran\n  // successfully.\n  script.onload = script.onreadystatechange = function() {\n    if (!script.readyState || script.readyState == 'loaded' ||\n        script.readyState == 'complete') {\n      var removeScriptNode = options.cleanupWhenDone || false;\n      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);\n      deferred.callback(null);\n    }\n  };\n\n  // Add an error callback.\n  // NOTE(user): Not supported in IE.\n  script.onerror = function() {\n    goog.net.jsloader.cleanup_(script, true, timeout);\n    deferred.errback(\n        new goog.net.jsloader.Error(\n            goog.net.jsloader.ErrorCode.LOAD_ERROR,\n            'Error while loading script ' + uri));\n  };\n\n  var properties = options.attributes || {};\n  goog.object.extend(\n      properties, {'type': 'text/javascript', 'charset': 'UTF-8'});\n  goog.dom.setProperties(script, properties);\n  // NOTE(user): Safari never loads the script if we don't set the src\n  // attribute before appending.\n  goog.dom.safe.setScriptSrc(script, trustedUri);\n  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);\n  scriptParent.appendChild(script);\n\n  return deferred;\n};\n\n\n/**\n * Loads a JavaScript file and verifies it was evaluated successfully, using a\n * verification object.\n * The verification object is set by the loaded JavaScript at the end of the\n * script.\n * We verify this object was set and return its value in the success callback.\n * If the object is not defined we trigger an error callback.\n *\n * @param {!goog.html.TrustedResourceUrl} trustedUri The URI of the JavaScript.\n * @param {string} verificationObjName The name of the verification object that\n *     the loaded script should set.\n * @param {goog.net.jsloader.Options} options Optional parameters. See\n *     goog.net.jsloader.Options documentation for details.\n * @return {!goog.async.Deferred} The deferred result, that may be used to add\n *     callbacks and/or cancel the transmission.\n *     The success callback will be called with a single parameter containing\n *     the value of the verification object.\n *     The error callback will be called with a single goog.net.jsloader.Error\n *     parameter.\n */\ngoog.net.jsloader.safeLoadAndVerify = function(\n    trustedUri, verificationObjName, options) {\n  // Define the global objects variable.\n  if (!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]) {\n    goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {};\n  }\n  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];\n  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);\n\n  // Verify that the expected object does not exist yet.\n  if (goog.isDef(verifyObjs[verificationObjName])) {\n    // TODO(user): Error or reset variable?\n    return goog.async.Deferred.fail(\n        new goog.net.jsloader.Error(\n            goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS,\n            'Verification object ' + verificationObjName +\n                ' already defined.'));\n  }\n\n  // Send request to load the JavaScript.\n  var sendDeferred = goog.net.jsloader.safeLoad(trustedUri, options);\n\n  // Create a deferred object wrapping the send result.\n  var deferred =\n      new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));\n\n  // Call user back with object that was set by the script.\n  sendDeferred.addCallback(function() {\n    var result = verifyObjs[verificationObjName];\n    if (goog.isDef(result)) {\n      deferred.callback(result);\n      delete verifyObjs[verificationObjName];\n    } else {\n      // Error: script was not loaded properly.\n      deferred.errback(\n          new goog.net.jsloader.Error(\n              goog.net.jsloader.ErrorCode.VERIFY_ERROR, 'Script ' + uri +\n                  ' loaded, but verification object ' + verificationObjName +\n                  ' was not defined.'));\n    }\n  });\n\n  // Pass error to new deferred object.\n  sendDeferred.addErrback(function(error) {\n    if (goog.isDef(verifyObjs[verificationObjName])) {\n      delete verifyObjs[verificationObjName];\n    }\n    deferred.errback(error);\n  });\n\n  return deferred;\n};\n\n\n/**\n * Gets the DOM element under which we should add new script elements.\n * How? Take the first head element, and if not found take doc.documentElement,\n * which always exists.\n *\n * @param {!HTMLDocument} doc The relevant document.\n * @return {!Element} The script parent element.\n * @private\n */\ngoog.net.jsloader.getScriptParentElement_ = function(doc) {\n  var headElements = goog.dom.getElementsByTagName(goog.dom.TagName.HEAD, doc);\n  if (!headElements || goog.array.isEmpty(headElements)) {\n    return doc.documentElement;\n  } else {\n    return headElements[0];\n  }\n};\n\n\n/**\n * Cancels a given request.\n * @this {{script_: Element, timeout_: number}} The request context.\n * @private\n */\ngoog.net.jsloader.cancel_ = function() {\n  var request = this;\n  if (request && request.script_) {\n    var scriptNode = request.script_;\n    if (scriptNode && scriptNode.tagName == goog.dom.TagName.SCRIPT) {\n      goog.net.jsloader.cleanup_(scriptNode, true, request.timeout_);\n    }\n  }\n};\n\n\n/**\n * Removes the script node and the timeout.\n * @param {Node} scriptNode The node to be cleaned up.\n * @param {boolean} removeScriptNode If true completely remove the script node.\n * @param {?number=} opt_timeout The timeout handler to cleanup.\n * @private\n * @suppress {strictMissingProperties} Part of the go/strict_warnings_migration\n */\ngoog.net.jsloader.cleanup_ = function(\n    scriptNode, removeScriptNode, opt_timeout) {\n  if (goog.isDefAndNotNull(opt_timeout)) {\n    goog.global.clearTimeout(opt_timeout);\n  }\n\n  scriptNode.onload = goog.nullFunction;\n  scriptNode.onerror = goog.nullFunction;\n  scriptNode.onreadystatechange = goog.nullFunction;\n\n  // Do this after a delay (removing the script node of a running script can\n  // confuse older IEs).\n  if (removeScriptNode) {\n    window.setTimeout(function() { goog.dom.removeNode(scriptNode); }, 0);\n  }\n};\n\n\n/**\n * Possible error codes for jsloader.\n * @enum {number}\n */\ngoog.net.jsloader.ErrorCode = {\n  LOAD_ERROR: 0,\n  TIMEOUT: 1,\n  VERIFY_ERROR: 2,\n  VERIFY_OBJECT_ALREADY_EXISTS: 3\n};\n\n\n\n/**\n * A jsloader error.\n *\n * @param {goog.net.jsloader.ErrorCode} code The error code.\n * @param {string=} opt_message Additional message.\n * @constructor\n * @extends {goog.debug.Error}\n * @final\n */\ngoog.net.jsloader.Error = function(code, opt_message) {\n  var msg = 'Jsloader error (code #' + code + ')';\n  if (opt_message) {\n    msg += ': ' + opt_message;\n  }\n  goog.net.jsloader.Error.base(this, 'constructor', msg);\n\n  /**\n   * The code for this error.\n   *\n   * @type {goog.net.jsloader.ErrorCode}\n   */\n  this.code = code;\n};\ngoog.inherits(goog.net.jsloader.Error, goog.debug.Error);\n","~:compiled-at",1554900569652,"~:source-map-json","{\n\"version\":3,\n\"file\":\"goog.net.jsloader.js\",\n\"lineCount\":181,\n\"mappings\":\"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\",\n\"sources\":[\"goog/net/jsloader.js\"],\n\"sourcesContent\":[\"// Copyright 2011 The Closure Library Authors. All Rights Reserved.\\n//\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n// you may not use this file except in compliance with the License.\\n// You may obtain a copy of the License at\\n//\\n//      http://www.apache.org/licenses/LICENSE-2.0\\n//\\n// Unless required by applicable law or agreed to in writing, software\\n// distributed under the License is distributed on an \\\"AS-IS\\\" BASIS,\\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n// See the License for the specific language governing permissions and\\n// limitations under the License.\\n\\n/**\\n * @fileoverview A utility to load JavaScript files via DOM script tags.\\n * Refactored from goog.net.Jsonp. Works cross-domain.\\n *\\n */\\n\\ngoog.provide('goog.net.jsloader');\\ngoog.provide('goog.net.jsloader.Error');\\ngoog.provide('goog.net.jsloader.ErrorCode');\\ngoog.provide('goog.net.jsloader.Options');\\n\\ngoog.require('goog.array');\\ngoog.require('goog.async.Deferred');\\ngoog.require('goog.debug.Error');\\ngoog.require('goog.dom');\\ngoog.require('goog.dom.TagName');\\ngoog.require('goog.dom.safe');\\ngoog.require('goog.html.TrustedResourceUrl');\\ngoog.require('goog.object');\\n\\n\\n/**\\n * The name of the property of goog.global under which the JavaScript\\n * verification object is stored by the loaded script.\\n * @private {string}\\n */\\ngoog.net.jsloader.GLOBAL_VERIFY_OBJS_ = 'closure_verification';\\n\\n\\n/**\\n * The default length of time, in milliseconds, we are prepared to wait for a\\n * load request to complete.\\n * @type {number}\\n */\\ngoog.net.jsloader.DEFAULT_TIMEOUT = 5000;\\n\\n\\n/**\\n * Optional parameters for goog.net.jsloader.send.\\n * timeout: The length of time, in milliseconds, we are prepared to wait\\n *     for a load request to complete, or 0 or negative for no timeout. Default\\n *     is 5 seconds.\\n * document: The HTML document under which to load the JavaScript. Default is\\n *     the current document.\\n * cleanupWhenDone: If true clean up the script tag after script completes to\\n *     load. This is important if you just want to read data from the JavaScript\\n *     and then throw it away. Default is false.\\n * attributes: Additional attributes to set on the script tag.\\n *\\n * @typedef {{\\n *   timeout: (number|undefined),\\n *   document: (HTMLDocument|undefined),\\n *   cleanupWhenDone: (boolean|undefined),\\n *   attributes: (!Object<string, string>|undefined)\\n * }}\\n */\\ngoog.net.jsloader.Options;\\n\\n\\n/**\\n * Scripts (URIs) waiting to be loaded.\\n * @private {!Array<!goog.html.TrustedResourceUrl>}\\n */\\ngoog.net.jsloader.scriptsToLoad_ = [];\\n\\n\\n/**\\n * The deferred result of loading the URIs in scriptsToLoad_.\\n * We need to return this to a caller that wants to load URIs while\\n * a deferred is already working on them.\\n * @private {!goog.async.Deferred<null>}\\n */\\ngoog.net.jsloader.scriptLoadingDeferred_;\\n\\n\\n\\n/**\\n * Loads and evaluates the JavaScript files at the specified URIs, guaranteeing\\n * the order of script loads.\\n *\\n * Because we have to load the scripts in serial (load script 1, exec script 1,\\n * load script 2, exec script 2, and so on), this will be slower than doing\\n * the network fetches in parallel.\\n *\\n * If you need to load a large number of scripts but dependency order doesn't\\n * matter, you should just call goog.net.jsloader.safeLoad N times.\\n *\\n * If you need to load a large number of scripts on the same domain,\\n * you may want to use goog.module.ModuleLoader.\\n *\\n * @param {Array<!goog.html.TrustedResourceUrl>} trustedUris The URIs to load.\\n * @param {goog.net.jsloader.Options=} opt_options Optional parameters. See\\n *     goog.net.jsloader.options documentation for details.\\n * @return {!goog.async.Deferred} The deferred result, that may be used to add\\n *     callbacks\\n */\\ngoog.net.jsloader.safeLoadMany = function(trustedUris, opt_options) {\\n  // Loading the scripts in serial introduces asynchronosity into the flow.\\n  // Therefore, there are race conditions where client A can kick off the load\\n  // sequence for client B, even though client A's scripts haven't all been\\n  // loaded yet.\\n  //\\n  // To work around this issue, all module loads share a queue.\\n  if (!trustedUris.length) {\\n    return goog.async.Deferred.succeed(null);\\n  }\\n\\n  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;\\n  goog.array.extend(goog.net.jsloader.scriptsToLoad_, trustedUris);\\n  if (isAnotherModuleLoading) {\\n    // jsloader is still loading some other scripts.\\n    // In order to prevent the race condition noted above, we just add\\n    // these URIs to the end of the scripts' queue and return the deferred\\n    // result of the ongoing script load, so the caller knows when they\\n    // finish loading.\\n    return goog.net.jsloader.scriptLoadingDeferred_;\\n  }\\n\\n  trustedUris = goog.net.jsloader.scriptsToLoad_;\\n  var popAndLoadNextScript = function() {\\n    var trustedUri = trustedUris.shift();\\n    var deferred = goog.net.jsloader.safeLoad(trustedUri, opt_options);\\n    if (trustedUris.length) {\\n      deferred.addBoth(popAndLoadNextScript);\\n    }\\n    return deferred;\\n  };\\n  goog.net.jsloader.scriptLoadingDeferred_ = popAndLoadNextScript();\\n  return goog.net.jsloader.scriptLoadingDeferred_;\\n};\\n\\n\\n/**\\n * Loads and evaluates a JavaScript file.\\n * When the script loads, a user callback is called.\\n * It is the client's responsibility to verify that the script ran successfully.\\n *\\n * @param {!goog.html.TrustedResourceUrl} trustedUri The URI of the JavaScript.\\n * @param {goog.net.jsloader.Options=} opt_options Optional parameters. See\\n *     goog.net.jsloader.Options documentation for details.\\n * @return {!goog.async.Deferred} The deferred result, that may be used to add\\n *     callbacks and/or cancel the transmission.\\n *     The error callback will be called with a single goog.net.jsloader.Error\\n *     parameter.\\n */\\ngoog.net.jsloader.safeLoad = function(trustedUri, opt_options) {\\n  var options = opt_options || {};\\n  var doc = options.document || document;\\n  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);\\n\\n  var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);\\n  var request = {script_: script, timeout_: undefined};\\n  var deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request);\\n\\n  // Set a timeout.\\n  var timeout = null;\\n  var timeoutDuration = goog.isDefAndNotNull(options.timeout) ?\\n      options.timeout :\\n      goog.net.jsloader.DEFAULT_TIMEOUT;\\n  if (timeoutDuration > 0) {\\n    timeout = window.setTimeout(function() {\\n      goog.net.jsloader.cleanup_(script, true);\\n      deferred.errback(\\n          new goog.net.jsloader.Error(\\n              goog.net.jsloader.ErrorCode.TIMEOUT,\\n              'Timeout reached for loading script ' + uri));\\n    }, timeoutDuration);\\n    request.timeout_ = timeout;\\n  }\\n\\n  // Hang the user callback to be called when the script completes to load.\\n  // NOTE(user): This callback will be called in IE even upon error. In any\\n  // case it is the client's responsibility to verify that the script ran\\n  // successfully.\\n  script.onload = script.onreadystatechange = function() {\\n    if (!script.readyState || script.readyState == 'loaded' ||\\n        script.readyState == 'complete') {\\n      var removeScriptNode = options.cleanupWhenDone || false;\\n      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);\\n      deferred.callback(null);\\n    }\\n  };\\n\\n  // Add an error callback.\\n  // NOTE(user): Not supported in IE.\\n  script.onerror = function() {\\n    goog.net.jsloader.cleanup_(script, true, timeout);\\n    deferred.errback(\\n        new goog.net.jsloader.Error(\\n            goog.net.jsloader.ErrorCode.LOAD_ERROR,\\n            'Error while loading script ' + uri));\\n  };\\n\\n  var properties = options.attributes || {};\\n  goog.object.extend(\\n      properties, {'type': 'text/javascript', 'charset': 'UTF-8'});\\n  goog.dom.setProperties(script, properties);\\n  // NOTE(user): Safari never loads the script if we don't set the src\\n  // attribute before appending.\\n  goog.dom.safe.setScriptSrc(script, trustedUri);\\n  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);\\n  scriptParent.appendChild(script);\\n\\n  return deferred;\\n};\\n\\n\\n/**\\n * Loads a JavaScript file and verifies it was evaluated successfully, using a\\n * verification object.\\n * The verification object is set by the loaded JavaScript at the end of the\\n * script.\\n * We verify this object was set and return its value in the success callback.\\n * If the object is not defined we trigger an error callback.\\n *\\n * @param {!goog.html.TrustedResourceUrl} trustedUri The URI of the JavaScript.\\n * @param {string} verificationObjName The name of the verification object that\\n *     the loaded script should set.\\n * @param {goog.net.jsloader.Options} options Optional parameters. See\\n *     goog.net.jsloader.Options documentation for details.\\n * @return {!goog.async.Deferred} The deferred result, that may be used to add\\n *     callbacks and/or cancel the transmission.\\n *     The success callback will be called with a single parameter containing\\n *     the value of the verification object.\\n *     The error callback will be called with a single goog.net.jsloader.Error\\n *     parameter.\\n */\\ngoog.net.jsloader.safeLoadAndVerify = function(\\n    trustedUri, verificationObjName, options) {\\n  // Define the global objects variable.\\n  if (!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]) {\\n    goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {};\\n  }\\n  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];\\n  var uri = goog.html.TrustedResourceUrl.unwrap(trustedUri);\\n\\n  // Verify that the expected object does not exist yet.\\n  if (goog.isDef(verifyObjs[verificationObjName])) {\\n    // TODO(user): Error or reset variable?\\n    return goog.async.Deferred.fail(\\n        new goog.net.jsloader.Error(\\n            goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS,\\n            'Verification object ' + verificationObjName +\\n                ' already defined.'));\\n  }\\n\\n  // Send request to load the JavaScript.\\n  var sendDeferred = goog.net.jsloader.safeLoad(trustedUri, options);\\n\\n  // Create a deferred object wrapping the send result.\\n  var deferred =\\n      new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));\\n\\n  // Call user back with object that was set by the script.\\n  sendDeferred.addCallback(function() {\\n    var result = verifyObjs[verificationObjName];\\n    if (goog.isDef(result)) {\\n      deferred.callback(result);\\n      delete verifyObjs[verificationObjName];\\n    } else {\\n      // Error: script was not loaded properly.\\n      deferred.errback(\\n          new goog.net.jsloader.Error(\\n              goog.net.jsloader.ErrorCode.VERIFY_ERROR, 'Script ' + uri +\\n                  ' loaded, but verification object ' + verificationObjName +\\n                  ' was not defined.'));\\n    }\\n  });\\n\\n  // Pass error to new deferred object.\\n  sendDeferred.addErrback(function(error) {\\n    if (goog.isDef(verifyObjs[verificationObjName])) {\\n      delete verifyObjs[verificationObjName];\\n    }\\n    deferred.errback(error);\\n  });\\n\\n  return deferred;\\n};\\n\\n\\n/**\\n * Gets the DOM element under which we should add new script elements.\\n * How? Take the first head element, and if not found take doc.documentElement,\\n * which always exists.\\n *\\n * @param {!HTMLDocument} doc The relevant document.\\n * @return {!Element} The script parent element.\\n * @private\\n */\\ngoog.net.jsloader.getScriptParentElement_ = function(doc) {\\n  var headElements = goog.dom.getElementsByTagName(goog.dom.TagName.HEAD, doc);\\n  if (!headElements || goog.array.isEmpty(headElements)) {\\n    return doc.documentElement;\\n  } else {\\n    return headElements[0];\\n  }\\n};\\n\\n\\n/**\\n * Cancels a given request.\\n * @this {{script_: Element, timeout_: number}} The request context.\\n * @private\\n */\\ngoog.net.jsloader.cancel_ = function() {\\n  var request = this;\\n  if (request && request.script_) {\\n    var scriptNode = request.script_;\\n    if (scriptNode && scriptNode.tagName == goog.dom.TagName.SCRIPT) {\\n      goog.net.jsloader.cleanup_(scriptNode, true, request.timeout_);\\n    }\\n  }\\n};\\n\\n\\n/**\\n * Removes the script node and the timeout.\\n * @param {Node} scriptNode The node to be cleaned up.\\n * @param {boolean} removeScriptNode If true completely remove the script node.\\n * @param {?number=} opt_timeout The timeout handler to cleanup.\\n * @private\\n * @suppress {strictMissingProperties} Part of the go/strict_warnings_migration\\n */\\ngoog.net.jsloader.cleanup_ = function(\\n    scriptNode, removeScriptNode, opt_timeout) {\\n  if (goog.isDefAndNotNull(opt_timeout)) {\\n    goog.global.clearTimeout(opt_timeout);\\n  }\\n\\n  scriptNode.onload = goog.nullFunction;\\n  scriptNode.onerror = goog.nullFunction;\\n  scriptNode.onreadystatechange = goog.nullFunction;\\n\\n  // Do this after a delay (removing the script node of a running script can\\n  // confuse older IEs).\\n  if (removeScriptNode) {\\n    window.setTimeout(function() { goog.dom.removeNode(scriptNode); }, 0);\\n  }\\n};\\n\\n\\n/**\\n * Possible error codes for jsloader.\\n * @enum {number}\\n */\\ngoog.net.jsloader.ErrorCode = {\\n  LOAD_ERROR: 0,\\n  TIMEOUT: 1,\\n  VERIFY_ERROR: 2,\\n  VERIFY_OBJECT_ALREADY_EXISTS: 3\\n};\\n\\n\\n\\n/**\\n * A jsloader error.\\n *\\n * @param {goog.net.jsloader.ErrorCode} code The error code.\\n * @param {string=} opt_message Additional message.\\n * @constructor\\n * @extends {goog.debug.Error}\\n * @final\\n */\\ngoog.net.jsloader.Error = function(code, opt_message) {\\n  var msg = 'Jsloader error (code #' + code + ')';\\n  if (opt_message) {\\n    msg += ': ' + opt_message;\\n  }\\n  goog.net.jsloader.Error.base(this, 'constructor', msg);\\n\\n  /**\\n   * The code for this error.\\n   *\\n   * @type {goog.net.jsloader.ErrorCode}\\n   */\\n  this.code = code;\\n};\\ngoog.inherits(goog.net.jsloader.Error, goog.debug.Error);\\n\"],\n\"names\":[\"goog\",\"provide\",\"require\",\"net\",\"jsloader\",\"GLOBAL_VERIFY_OBJS_\",\"DEFAULT_TIMEOUT\",\"Options\",\"scriptsToLoad_\",\"scriptLoadingDeferred_\",\"safeLoadMany\",\"goog.net.jsloader.safeLoadMany\",\"trustedUris\",\"opt_options\",\"length\",\"async\",\"Deferred\",\"succeed\",\"isAnotherModuleLoading\",\"array\",\"extend\",\"popAndLoadNextScript\",\"trustedUri\",\"shift\",\"deferred\",\"safeLoad\",\"addBoth\",\"goog.net.jsloader.safeLoad\",\"options\",\"doc\",\"document\",\"uri\",\"html\",\"TrustedResourceUrl\",\"unwrap\",\"script\",\"dom\",\"createElement\",\"TagName\",\"SCRIPT\",\"request\",\"script_\",\"timeout_\",\"undefined\",\"cancel_\",\"timeout\",\"timeoutDuration\",\"isDefAndNotNull\",\"window\",\"setTimeout\",\"cleanup_\",\"errback\",\"Error\",\"ErrorCode\",\"TIMEOUT\",\"onload\",\"onreadystatechange\",\"script.onreadystatechange\",\"readyState\",\"removeScriptNode\",\"cleanupWhenDone\",\"callback\",\"onerror\",\"script.onerror\",\"LOAD_ERROR\",\"properties\",\"attributes\",\"object\",\"setProperties\",\"safe\",\"setScriptSrc\",\"scriptParent\",\"getScriptParentElement_\",\"appendChild\",\"safeLoadAndVerify\",\"goog.net.jsloader.safeLoadAndVerify\",\"verificationObjName\",\"global\",\"verifyObjs\",\"isDef\",\"fail\",\"VERIFY_OBJECT_ALREADY_EXISTS\",\"sendDeferred\",\"bind\",\"cancel\",\"addCallback\",\"result\",\"VERIFY_ERROR\",\"addErrback\",\"error\",\"goog.net.jsloader.getScriptParentElement_\",\"headElements\",\"getElementsByTagName\",\"HEAD\",\"isEmpty\",\"documentElement\",\"goog.net.jsloader.cancel_\",\"scriptNode\",\"tagName\",\"goog.net.jsloader.cleanup_\",\"opt_timeout\",\"clearTimeout\",\"nullFunction\",\"removeNode\",\"goog.net.jsloader.Error\",\"code\",\"opt_message\",\"msg\",\"base\",\"inherits\",\"debug\"]\n}\n"]